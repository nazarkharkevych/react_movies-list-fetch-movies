{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAddToTheList","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useState3","_useState4","hasError","setHasError","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","setMovie","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","normalizedQuery","movieData","Title","Plot","Poster","imdbID","foundMovie","wrap","_context","prev","next","preventDefault","trim","toLowerCase","query","fetch","concat","then","res","json","catch","Response","Error","sent","poster","t0","finish","stop","_x","apply","arguments","_Fragment","onSubmit","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","newMovie","some","movieAlreadyInTheList","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcca2ae4.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\n\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\n\nimport { getMovie } from '../../api';\n\ntype Props = {\n  onAddToTheList: (movie: Movie) => void;\n};\n\nconst isResponseError\n  = (response: MovieData | ResponseError): response is ResponseError => {\n    return (response as ResponseError).Response === 'False';\n  };\n\nconst getPosterUrl = (poster: string) => {\n  if (poster === 'N/A') {\n    return 'https://via.placeholder.com/360x270.png?text=no%20preview';\n  }\n\n  return poster;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddToTheList }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setHasError(false);\n\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const normalizedQuery = searchQuery.trim().toLowerCase();\n\n    try {\n      setIsLoading(true);\n\n      const movieData = await getMovie(normalizedQuery);\n\n      if (isResponseError(movieData)) {\n        setHasError(true);\n      } else {\n        const {\n          Title,\n          Plot,\n          Poster,\n          imdbID,\n        } = movieData;\n\n        const foundMovie = {\n          title: Title,\n          description: Plot,\n          imgUrl: getPosterUrl(Poster),\n          imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n          imdbId: imdbID,\n        };\n\n        setMovie(foundMovie);\n      }\n    } catch (error) {\n      setHasError(true);\n\n      throw new Error('Error occured while fetching data');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleAddtoTheList = (foundMovie: Movie) => {\n    onAddToTheList(foundMovie);\n\n    setSearchQuery('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': hasError },\n              )}\n              value={searchQuery}\n              onChange={handleOnChange}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!searchQuery}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleAddtoTheList(movie)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=ec610f4d';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nconst movieAlreadyInTheList = (movies: Movie[], newMovie: Movie) => {\n  return movies.some(movie => movie.imdbId === newMovie.imdbId);\n};\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddtoTheList = (newMovie: Movie) => {\n    if (!movieAlreadyInTheList(movies, newMovie)) {\n      setMovies([\n        ...movies,\n        newMovie,\n      ]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddToTheList={handleAddtoTheList} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}